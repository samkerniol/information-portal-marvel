{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","setContent","process","Component","newItemLoading","Spinner","ErrorMessage","ComicsList","useState","comicsItems","setComicsItems","setNewItemLoading","offset","setOffset","useMarvelService","getAllItemsData","setProcess","useEffect","onRequest","initial","then","onComicsItemsLoaded","newComicsItems","comicsItem","className","items","map","i","id","title","thumbnail","price","fadeIn","length","to","src","alt","renderItems","disabled","onClick","ComicsPage","Helmet","name","content","AppBanner"],"mappings":"uMAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,6IIIxFC,EAAa,SAACC,EAASC,EAAWC,GACpC,OAAOF,GACH,IAAK,UACD,OAAO,cAACG,EAAA,EAAD,IACX,IAAK,UACD,OAAOD,EAAiB,cAACD,EAAD,IAAe,cAACE,EAAA,EAAD,IAC3C,IAAK,YACD,OAAO,cAACF,EAAD,IACX,QACI,OAAO,cAACG,EAAA,EAAD,MAsEJC,EAlEI,WACf,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,OAC0CF,oBAAS,GADnD,mBACKJ,EADL,KACqBO,EADrB,OAE0BH,mBAAS,KAFnC,mBAEKI,EAFL,KAEaC,EAFb,OAG6CC,cAAxCC,EAHL,EAGKA,gBAAiBb,EAHtB,EAGsBA,QAASc,EAH/B,EAG+BA,WAE/BC,qBAAU,WACNC,EAAUN,GAAQ,KAEnB,IAEH,IAAMM,EAAY,SAACN,EAAQO,GACbR,GAAVQ,GAEAJ,EAAgB,SAAU,EAAGH,GACxBQ,KAAKC,GACLD,MAAK,kBAAMJ,EAAW,iBAGzBK,EAAsB,SAAAC,GACxBZ,GAAe,SAAAa,GAAU,4BAAQA,GAAR,YAAuBD,OAChDX,GAAkB,GAClBE,GAAU,SAAAD,GAAM,OAAIA,EAAU,MA6BlC,OACI,sBAAKY,UAAU,SAAf,UACKvB,EAAWC,GAAS,kBA5B7B,SAAqBZ,GACjB,IAAMmC,EAAQnC,EAAIoC,KAAI,WAAgCC,GAAO,IAArCC,EAAoC,EAApCA,GAAIC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,MACtCC,EAAqB,YAAZ9B,EAAwB,UAAY,GAMjD,OAJIZ,EAAI2C,OAAS,GAAKN,EAAIrC,EAAI2C,OAAS,IACnCD,EAAS,IAIT,oBAAIR,UAAW,eAAiBQ,EAAhC,SACI,eAAC,IAAD,CAAME,GAAE,kBAAaN,GAArB,UACI,qBAAKJ,UAAU,yBAAyBW,IAAKL,EAAWM,IAAKP,IAC7D,oBAAIL,UAAU,qBAAd,SAAoCK,IACpC,qBAAIL,UAAU,qBAAd,UAAoCO,EAApC,WAJqCJ,MAUrD,OACI,oBAAIH,UAAU,gBAAd,SACKC,IAOsBY,CAAY5B,KAAcL,GACxC,YAAZF,GAAyBE,EACtB,wBACIoB,UAAU,mCACVc,SAAUlC,EACVmC,QAAS,kBAAMrB,EAAUN,IAH7B,SAII,qBAAKY,UAAU,QAAf,yBAEN,S,QC9DCgB,UAhBI,WACf,OACI,qCACK,eAACC,EAAA,EAAD,WACG,sBACIC,KAAK,cACLC,QAAQ,iCAEZ,mDAEJ,cAACC,EAAA,EAAD,IACA,cAAC,EAAD","file":"static/js/8.75466590.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport './comicsList.scss'\r\n\r\nimport useMarvelService from '../../services/MarvelService'\r\nimport Spinner from '../spinner/Spinner'\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n    switch(process) {\r\n        case 'waiting':\r\n            return <Spinner/>\r\n        case 'loading':\r\n            return newItemLoading ? <Component/> : <Spinner/>\r\n        case 'confirmed':\r\n            return <Component/>\r\n        default:\r\n            return <ErrorMessage/>\r\n    }\r\n}\r\n\r\nconst ComicsList = () => {\r\n    const [comicsItems, setComicsItems] = useState([]),\r\n        [newItemLoading, setNewItemLoading] = useState(false),\r\n        [offset, setOffset] = useState(210),\r\n        {getAllItemsData, process, setProcess} = useMarvelService()\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true) \r\n\r\n        getAllItemsData('comics', 8, offset)\r\n            .then(onComicsItemsLoaded)\r\n            .then(() => setProcess('confirmed'))\r\n    }\r\n\r\n    const onComicsItemsLoaded = newComicsItems => {\r\n        setComicsItems(comicsItem => [...comicsItem, ...newComicsItems])\r\n        setNewItemLoading(false)\r\n        setOffset(offset => offset  + 9)\r\n    }\r\n\r\n    function renderItems(arr) {\r\n        const items = arr.map(({id, title, thumbnail, price}, i) => {\r\n            let fadeIn = process !== 'loading' ? ' fadeIn' : ''\r\n\r\n            if (arr.length > 8 && i < arr.length - 8) {\r\n                fadeIn = ''\r\n            }\r\n\r\n            return (\r\n                <li className={'comics__item' + fadeIn} key={i}>\r\n                    <Link to={`/comics/${id}`}>\r\n                        <img className='comics__item-thumbnail' src={thumbnail} alt={title}/>\r\n                        <h1 className='comics__item-title'>{title}</h1>\r\n                        <h2 className='comics__item-price'>{price}$</h2>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className='comics__items'>\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='comics'>\r\n            {setContent(process, () => renderItems(comicsItems), newItemLoading)}\r\n            {process !== 'loading' || newItemLoading ?\r\n                <button\r\n                    className=\"button button__main button__long\"\r\n                    disabled={newItemLoading}\r\n                    onClick={() => onRequest(offset)}>\r\n                    <div className=\"inner\">load more</div>\r\n                </button>\r\n            : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList","import {Helmet} from 'react-helmet'\r\n\r\nimport ComicsList from '../comicsList/ComicsList'\r\nimport AppBanner from '../appBanner/AppBanner'\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n             <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Pagw with list of our comics\"\r\n                />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage"],"sourceRoot":""}